
apiVersion: argoproj.io/v1alpha1
kind: ClusterWorkflowTemplate
metadata:
  name: argocd-toolkit
spec:
  arguments:
    parameters:
    - name: git_repo
      value: "{{workflow.parameters.git_repo}}"
    - name: gitops_repo
      value: "{{workflow.parameters.gitops_repo}}"
    - name: git_revision
      value: "{{workflow.parameters.git_revision}}"
    - name: working_directory
      value: "{{workflow.parameters.working_directory}}"
    - name: environment_name
      value: "{{workflow.parameters.environment_name | nospace | lower }}"
    - name: argo_project
      value: "{{workflow.parameters.argo_project | nospace | lower }}"
    - name: namespace
      value: "{{workflow.parameters.namespace | nospace | lower }}"
  templates:
  - name: apply-argocd-project
    inputs:
      parameters:
      - name: git_repo
      - name: git_revision
      - name: gitops_repo
      - name: working_directory
      - name: environment_name
      - name: argo_project
      - name: namespace
    resource:
      action: create
      manifest: |
        apiVersion: argoproj.io/v1alpha1
        kind: AppProject
        metadata:
          name: {{inputs.parameters.argo_project}}
          namespace: argocd
          # Finalizer that ensures that project is not deleted until it is not referenced by any application
          finalizers:
            - resources-finalizer.argocd.argoproj.io
        spec:
          # Project description
          description: {{inputs.parameters.argo_project}} project

          # Allow manifests to deploy from any Git repos
          sourceRepos:
          - '*'

          # Only permit applications to deploy to the {{inputs.parameters.namespace}} namespace in the same cluster
          destinations:
          - namespace: {{inputs.parameters.namespace}}
            server: https://kubernetes.default.svc
          - namespace: argocd
            server: https://kubernetes.default.svc

          # Deny all cluster-scoped resources from being created, except for Namespace 
          clusterResourceWhitelist:
          - group: '*'
            kind: '*'

          # # Allow all namespaced-scoped resources to be created, except for ResourceQuota, LimitRange, NetworkPolicy
          # namespaceResourceBlacklist:
          # - group: ''
          #   kind: ResourceQuota
          # - group: ''
          #   kind: LimitRange
          # - group: ''
          #   kind: NetworkPolicy

          # Deny all namespaced-scoped resources from being created, except for Deployment and StatefulSet
          namespaceResourceWhitelist:
          - group: '*'
            kind: '*'

          # # Enables namespace orphaned resource monitoring.
          # orphanedResources:
          #   warn: false

          # roles:
          # # A role which provides read-only access to all applications in the project
          # - name: read-only
          #   description: Read-only privileges to {{inputs.parameters.argo_project}}
          #   policies:
          #   - p, proj:{{inputs.parameters.argo_project}}:read-only, applications, get, {{inputs.parameters.argo_project}}/*, allow
          #   groups:
          #   - {{inputs.parameters.argo_project}}-oidc-group

          # A role which provides sync privileges to only the {{inputs.parameters.environment_name}} application, e.g. to provide
          # # sync privileges to a CI system
          # - name: ci-role
          #   description: Sync privileges for {{inputs.parameters.environment_name}}
          #   policies:
          #   - p, proj:{{inputs.parameters.argo_project}}:ci-role, applications, sync, {{inputs.parameters.argo_project}}/{{inputs.parameters.environment_name}}, allow
  - name: apply-argocd-app
    inputs:
      parameters:
      - name: git_repo
      - name: git_revision
      - name: gitops_repo
      - name: working_directory
      - name: environment_name
      - name: argo_project
      - name: namespace
    resource:
      action: create
      manifest: |
        apiVersion: argoproj.io/v1alpha1
        kind: Application
        metadata:
          name: '{{inputs.parameters.environment_name}}'
          namespace: argocd
          finalizers:
          - resources-finalizer.argocd.argoproj.io
        spec:
          destination:
            namespace: '{{inputs.parameters.namespace}}'
            name: in-cluster
          project: '{{inputs.parameters.argo_project}}'
          source:
            path: shield-app/{{inputs.parameters.environment_name}}
            repoURL: '{{inputs.parameters.gitops_repo}}'
            targetRevision: '{{inputs.parameters.git_revision}}'
          syncPolicy:
            automated:
              selfHeal: true
              prune: true
            syncOptions:
              - CreateNamespace=true