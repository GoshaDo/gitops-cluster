
apiVersion: argoproj.io/v1alpha1
kind: ClusterWorkflowTemplate
metadata:
  name: git-toolkit
spec:
  arguments:
    parameters:
    - name: git_repo
      value: "{{workflow.parameters.git_repo}}"
    - name: ssh_key_secret_name
      value: "{{workflow.parameters.ssh_key_secret_name}}"
    - name: working_directory
      value: "{{workflow.parameters.working_directory}}"
    - name: repository_name
      value: "{{workflow.parameters.repository_name}}"
  templates:
##########################git-clone-ssh##########################
  - name: git-clone-ssh
    nodeSelector:
      k8s-app: argo-workflows
    inputs:
      parameters:
      - name: git_repo
      - name: ssh_key_secret_name
      - name: working_directory
      - name: remove_list
    script:
      image: alpine/git
      workingDir: /{{inputs.parameters.working_directory}}/
      volumeMounts:
      - name: '{{inputs.parameters.working_directory}}'
        mountPath: /{{inputs.parameters.working_directory}}
      - name: '{{inputs.parameters.ssh_key_secret_name}}'
        mountPath: "/etc/ssh-key"
        readOnly: true
      command: [sh]
      # can we remove the line rm -rf argocd ?
      source: |
        set -euo pipefail
        eval "$( ssh-agent -s )"
        ssh-add /etc/ssh-key/ssh-private-key
        rm -rf argocd
        git clone '{{inputs.parameters.git_repo}}'
        rm -rf '{{inputs.parameters.remove_list}}'
        ls -alt
      env:
      - name: GIT_SSH_COMMAND
        value: ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no

##########################git-pull-ssh##########################
  - name: git-pull-ssh
    nodeSelector:
      k8s-app: argo-workflows
    inputs:
      parameters:
      - name: git_repo
      - name: ssh_key_secret_name
      - name: working_directory
      - name: remove_list
      - name: repository_name
    script:
      image: alpine/git
      workingDir: /{{inputs.parameters.working_directory}}/{{inputs.parameters.repository_name}}/
      volumeMounts:
      - name: '{{inputs.parameters.working_directory}}'
        mountPath: /{{inputs.parameters.working_directory}}
      - name: '{{inputs.parameters.ssh_key_secret_name}}'
        mountPath: "/etc/ssh-key"
        readOnly: true
      command: [sh]
      source: |
        set -euo pipefail
        eval "$( ssh-agent -s )"
        ssh-add /etc/ssh-key/ssh-private-key
        rm -rf argocd
        pwd
        ls -alt
        git config --global --add safe.directory $(pwd)
        git pull '{{inputs.parameters.git_repo}}'
        rm -rf '{{inputs.parameters.remove_list}}'
      env:
      - name: GIT_SSH_COMMAND
        value: ssh -o UserKnownHostsFile=/dev/null -o StrictHostKeyChecking=no

##########################git-update-repo-ssh##########################
  - name: git-update-repo-ssh
    nodeSelector:
      k8s-app: argo-workflows
    inputs:
      parameters:
        - name: git_repo
        - name: ssh_key_secret_name
        - name: working_directory
        - name: remove_list
        - name: repository_name
    dag:
      tasks:
        - name: check-empty
          templateRef:
            name: common-toolkit 
            template: is-empty
            clusterScope: true
          arguments:
            parameters:
            - name: working_directory
              value: "{{inputs.parameters.working_directory}}"
            - name: repository_name
              value: "{{inputs.parameters.repository_name}}"
        - name: git-clone
          templateRef:
            name: git-toolkit
            template: git-clone-ssh
            clusterScope: true
          arguments:
            parameters:
            - name: git_repo
              value: "{{inputs.parameters.git_repo}}"
            - name: ssh_key_secret_name
              value: "{{inputs.parameters.ssh_key_secret_name}}"
            - name: working_directory
              value: "{{inputs.parameters.working_directory}}"
            - name: remove_list
              value: "{{inputs.parameters.remove_list}}"
          dependencies:
          - check-empty
          when: "{{tasks.check-empty.outputs.result}} == 0"
        - name: git-pull
          templateRef:
            name: git-toolkit
            template: git-pull-ssh
            clusterScope: true
          arguments:
            parameters:
            - name: git_repo
              value: "{{inputs.parameters.git_repo}}"
            - name: ssh_key_secret_name
              value: "{{inputs.parameters.ssh_key_secret_name}}"
            - name: working_directory
              value: "{{inputs.parameters.working_directory}}"
            - name: remove_list
              value: "{{inputs.parameters.remove_list}}"
          dependencies:
          - check-empty
          when: "{{tasks.check-empty.outputs.result}} != 0"
      