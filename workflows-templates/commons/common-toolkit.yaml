
apiVersion: argoproj.io/v1alpha1
kind: ClusterWorkflowTemplate
metadata:
  name: common-toolkit
spec:
  templates:
##########################versioning##########################
  - name: versioning
    metadata:
      labels:
        k8s-app: argo-workflows
    inputs:
      parameters:
      - name: container_registery
      - name: container_repo
    script:
      image: goshad/pre-build:v0
      volumeMounts:
      command: [bash]
      source: |
        echo "0.1.1"
##########################is-empty##########################
  - name: is-empty
    metadata:
      labels:
        k8s-app: argo-workflows
    inputs:
      parameters:
      - name: working_directory
      - name: git_repo
      - name: repo_name
    script:
      image: alpine:latest
      workingDir: /{{inputs.parameters.working_directory}}/{{inputs.parameters.repo_name}}/
      volumeMounts:
      - name: '{{inputs.parameters.working_directory}}'
        mountPath: /{{inputs.parameters.working_directory}}
      command: [sh]
      source: |
        set -euo pipefail
        NUM_FILES=$(ls -alt| wc -l| awk '{print $1-3}')
        echo $NUM_FILES
##########################kaniko-build-and-push##########################
  - name: kaniko-build-and-push
    inputs:
      parameters:
      - name: working_directory
      - name: repo_name
      - name: new_tag
    container:
      image: gcr.io/kaniko-project/executor
      command: [/kaniko/executor]
      args:
      - --context=dir:///flaskapp-workdir/BestFW
      - --destination=goshad/bestfw:{{inputs.parameters.new_tag}}
      - --cache
      volumeMounts:
        - name: docker-config
          mountPath: /kaniko/.docker/
        - name: '{{inputs.parameters.working_directory}}'
          mountPath: /{{inputs.parameters.working_directory}}
      resources:
        limits:
          cpu: 1
          memory: 1Gi
    volumes:
    - name: docker-config
      projected:
        sources:
        - secret:
            name: regcred
            items:
              - key: .dockerconfigjson
                path: config.json

##########################gitops-deployment##########################
  - name: gitops-deployment
    metadata:
      labels:
        k8s-app: argo-workflows
    inputs:
      parameters:
      - name: working_directory
      - name: repo_name
      - name: new_tag
      - name: component
      - name: ssh_key_secret_name
    script:
      image: goshad/post-build:v0
      workingDir: /{{inputs.parameters.working_directory}}/{{inputs.parameters.repo_name}}/
      volumeMounts:
        - name: '{{inputs.parameters.working_directory}}'
          mountPath: /{{inputs.parameters.working_directory}}
        - name: '{{inputs.parameters.ssh_key_secret_name}}'
          mountPath: "/etc/ssh-key"
          readOnly: true
      command: [sh]
      source: |
        set -euo pipefail
        eval "$( ssh-agent -s )"
        ssh-add /etc/ssh-key/ssh-private-key

        yq -i e '.{{inputs.parameters.component}}.image = {{inputs.parameters.new_tag}}' ./argocd/apps/values.yaml
        cat ./argocd/apps/values.yaml

        git commit -am "automation"
        git push
        